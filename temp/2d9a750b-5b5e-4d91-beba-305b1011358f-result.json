{"name": "错误密码登录", "status": "broken", "statusDetails": {"message": "TypeError: not all arguments converted during string formatting", "trace": "self = <test_case.test_case.TestCase object at 0x000001B29B5292E0>\ncase = {'case_controller': '/admin/login', 'case_desc': '', 'case_fun': '用户登录', 'case_moudle': '登录模块', ...}\n\n    @pytest.mark.parametrize('case', TestCaseData.getExcelCases())\n    def test_excel(self, case):\n        \"\"\"\n        执行测试用例\n        :return:\n        \"\"\"\n        print('开始用例测试', case)\n        # 请求方式\n        pattern = case.get('pattern')\n    \n        # 设置用例名称\n        allure.dynamic.feature(case.get('case_moudle'))\n        allure.dynamic.story(case.get('case_fun'))\n        allure.dynamic.title(case.get('case_name'))\n        allure.dynamic.description(case.get('case_desc'))\n>       log.info('开始', case.get('case_name'))\n\ntest_case\\test_case.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\python3.9\\lib\\logging\\__init__.py:1434: in info\n    self._log(INFO, msg, args, **kwargs)\nD:\\python3.9\\lib\\logging\\__init__.py:1577: in _log\n    self.handle(record)\nD:\\python3.9\\lib\\logging\\__init__.py:1587: in handle\n    self.callHandlers(record)\nD:\\python3.9\\lib\\logging\\__init__.py:1649: in callHandlers\n    hdlr.handle(record)\nD:\\python3.9\\lib\\logging\\__init__.py:948: in handle\n    self.emit(record)\nD:\\python3.9\\lib\\site-packages\\_pytest\\logging.py:326: in emit\n    super().emit(record)\nD:\\python3.9\\lib\\logging\\__init__.py:1087: in emit\n    self.handleError(record)\nD:\\python3.9\\lib\\logging\\__init__.py:1079: in emit\n    msg = self.format(record)\nD:\\python3.9\\lib\\logging\\__init__.py:923: in format\n    return fmt.format(record)\nD:\\python3.9\\lib\\site-packages\\_pytest\\logging.py:89: in format\n    return super().format(record)\nD:\\python3.9\\lib\\logging\\__init__.py:659: in format\n    record.message = record.getMessage()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <LogRecord: logger, 20, E:\\python_work\\auto_interface\\V1.0.1\\test_case\\test_case.py, 53, \"开始\">\n\n    def getMessage(self):\n        \"\"\"\n        Return the message for this LogRecord.\n    \n        Return the message for this LogRecord after merging any user-supplied\n        arguments with the message.\n        \"\"\"\n        msg = str(self.msg)\n        if self.args:\n>           msg = msg % self.args\nE           TypeError: not all arguments converted during string formatting\n\nD:\\python3.9\\lib\\logging\\__init__.py:363: TypeError"}, "start": 1609406530286, "stop": 1609406530287, "uuid": "54bafa4a-f2ac-4c89-86ff-6d88b728eef2", "historyId": "c95b63e950ed49888278c86b381f95e8", "testCaseId": "3eda8e63bd9a4314c2b5a24d7dc1b926", "fullName": "test_case.test_case.TestCase#test_excel", "labels": [{"name": "feature", "value": "登录模块"}, {"name": "story", "value": "用户登录"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_case"}, {"name": "subSuite", "value": "TestCase"}, {"name": "host", "value": "LAPTOP-TBMD39IH"}, {"name": "thread", "value": "20128-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_case"}]}