{
  "uid" : "59c3eba36b0620e9",
  "name" : "正确获取所有商品优选数据",
  "fullName" : "test_case.test_case.TestCase#test_excel",
  "historyId" : "899df1a120f8586178240f0a03519cc7",
  "time" : {
    "start" : 1609406707240,
    "stop" : 1609406707245,
    "duration" : 5
  },
  "status" : "broken",
  "statusMessage" : "TypeError: can only concatenate str (not \"dict\") to str",
  "statusTrace" : "self = <test_case.test_case.TestCase object at 0x000001EB7F7A7CA0>\ncase = {'case_controller': '/prefrenceArea/listAll', 'case_desc': '', 'case_fun': '获取所有商品优选', 'case_moudle': '商品优选管理', ...}\n\n    @pytest.mark.parametrize('case', TestCaseData.getExcelCases())\n    def test_excel(self, case):\n        \"\"\"\n        执行测试用例\n        :return:\n        \"\"\"\n        print('开始用例测试', case)\n        # 请求方式\n        pattern = case.get('pattern')\n    \n        # 设置用例名称\n        allure.dynamic.feature(case.get('case_moudle'))\n        allure.dynamic.story(case.get('case_fun'))\n        allure.dynamic.title(case.get('case_name'))\n        allure.dynamic.description(case.get('case_desc'))\n        log.warning('开始:' + case.get('case_name'))\n        url = self.buildUrl(case)\n        log.warning('请求地址:' + url)\n        headers = self.buildHeaders(case)\n>       log.warning('请求头参数:' + headers)\nE       TypeError: can only concatenate str (not \"dict\") to str\n\ntest_case\\test_case.py:59: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "TypeError: can only concatenate str (not \"dict\") to str",
    "statusTrace" : "self = <test_case.test_case.TestCase object at 0x000001EB7F7A7CA0>\ncase = {'case_controller': '/prefrenceArea/listAll', 'case_desc': '', 'case_fun': '获取所有商品优选', 'case_moudle': '商品优选管理', ...}\n\n    @pytest.mark.parametrize('case', TestCaseData.getExcelCases())\n    def test_excel(self, case):\n        \"\"\"\n        执行测试用例\n        :return:\n        \"\"\"\n        print('开始用例测试', case)\n        # 请求方式\n        pattern = case.get('pattern')\n    \n        # 设置用例名称\n        allure.dynamic.feature(case.get('case_moudle'))\n        allure.dynamic.story(case.get('case_fun'))\n        allure.dynamic.title(case.get('case_name'))\n        allure.dynamic.description(case.get('case_desc'))\n        log.warning('开始:' + case.get('case_name'))\n        url = self.buildUrl(case)\n        log.warning('请求地址:' + url)\n        headers = self.buildHeaders(case)\n>       log.warning('请求头参数:' + headers)\nE       TypeError: can only concatenate str (not \"dict\") to str\n\ntest_case\\test_case.py:59: TypeError",
    "steps" : [ {
      "name" : "构建请求路径",
      "time" : {
        "start" : 1609406707243,
        "stop" : 1609406707243,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "case",
        "value" : "{'case_number': 'T003', 'case_moudle': '商品优选管理', 'case_fun': '获取所有商品优选', 'case_name': '正确获取所有商品优选数据', 'case_desc': '', 'case_url': 'http://admin-api.macrozheng.com', 'case_controller': '/prefrenceArea/listAll', 'pattern': 'GET', 'headers': '{\\n\"Content-Type\":\"application/json\",\\n\"Authorization\": \"${token}\"\\n        }', 'param': '', 'result': 'message', 'expect': '操作成功', 'trust_result': '', 'floor': ''}"
      } ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "构建请求头",
      "time" : {
        "start" : 1609406707244,
        "stop" : 1609406707245,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "case",
        "value" : "{'case_number': 'T003', 'case_moudle': '商品优选管理', 'case_fun': '获取所有商品优选', 'case_name': '正确获取所有商品优选数据', 'case_desc': '', 'case_url': 'http://admin-api.macrozheng.com', 'case_controller': '/prefrenceArea/listAll', 'pattern': 'GET', 'headers': '{\\n\"Content-Type\":\"application/json\",\\n\"Authorization\": \"${token}\"\\n        }', 'param': '', 'result': 'message', 'expect': '操作成功', 'trust_result': '', 'floor': ''}"
      } ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ {
      "uid" : "b73693f766fbc114",
      "name" : "log",
      "source" : "b73693f766fbc114.txt",
      "type" : "text/plain",
      "size" : 170
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "商品优选管理"
  }, {
    "name" : "story",
    "value" : "获取所有商品优选"
  }, {
    "name" : "parentSuite",
    "value" : "test_case"
  }, {
    "name" : "suite",
    "value" : "test_case"
  }, {
    "name" : "subSuite",
    "value" : "TestCase"
  }, {
    "name" : "host",
    "value" : "LAPTOP-TBMD39IH"
  }, {
    "name" : "thread",
    "value" : "536-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.test_case"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "59c3eba36b0620e9.json",
  "parameterValues" : [ ]
}